#labels Analyse-CRC
== CompositeSpecification ==
<table border="1">
   <tr>
       <td width="60%" width="70%">Guillaume</td>
       <td rowspan="2">
           * ISpecification (interface)
           * CompositeSpecification (même classe récursivement)
           * AtomicSpecification
           * Task
       </td>
   </tr>
   <tr>
       <td>
           * Teste si la spécification est présentement satisfaite en testant ses sous-spécifications et en appliquant un opérateur "et" ou "ou"
       </td>
   </tr>
</table>

== AtomicSpecification ==
<table border="1">
   <tr>
       <td width="60%" width="70%">Guillaume</td>
       <td rowspan="2">
           * ISpecification (interface)
           * CompositeSpecification
           * Task
       </td>
   </tr>
   <tr>
       <td>
           * Teste si la spécification atomique est présentement satisfaite
       </td>
   </tr>
</table>

== Task ==
<table border="1">
   <tr>
       <td width="60%" width="70%">Guillaume</td>
       <td rowspan="2">
           * ISpecification (interface)
           * Action
           * TaskModule
           * TaskManager
       </td>
   </tr>
   <tr>
       <td>
           * Lorsque que la tâche est activée, effectue (0/une/des) action(s) si la spécification (est/n'est) pas satisfaite 
       </td>
   </tr>
</table>

== TaskManager ==
<table border="1">
   <tr>
       <td width="60%" width="70%">Guillaume</td>
       <td rowspan="2">
           * Task
           * DataOrm
       </td>
   </tr>
   <tr>
       <td>
           * Active tous les tâches associées à une entiée fournie par l'Orm.
           * Gère de manière persistante les associations entre les types d'entités et les tâches associées
       </td>
   </tr>
</table>

== TaskModule ==
<table border="1">
   <tr>
       <td width="60%" width="70%">Guillaume</td>
       <td rowspan="2">
           * Module (TaskModule est une sous-classe de Module)
           * MainModule (TaskModule est une composante de MainModule)
           * TaskManager (TaskModule cré des tâches dans le taskManager)
           * TaskViewer (TaskViewer permet de voir les Tasks pour les modifier)
       </td>
   </tr>
   <tr>
       <td>
           * Active tous les tâches associées à une entiée fournie par l'Orm.
           * Gère de manière persistante les associations entre les types d'entités et les tâches associées
       </td>
   </tr>
</table>